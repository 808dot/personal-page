---
export const client = 'load';
---
<div class="landing-scene">
	<canvas id="three-canvas"></canvas>
	<div id="overlay" class="overlay">Click space or logo to continue</div>
</div>

<style>
	/* ...existing styles... */
	.landing-scene {
		position: relative;
		width: 100vw;
		height: 100vh;
		overflow: hidden;
		background: #000;
	}
	canvas {
		display: block;
		width: 100%;
		height: 100%;
	}
	.overlay {
		position: absolute;
		top: 50%;
		left: 50%;
		transform: translate(-50%, -50%);
		color: #fff;
		font-size: 2rem;
		opacity: 0;
		pointer-events: none;
	}
	.overlay.active {
		opacity: 1;
		pointer-events: auto;
		transition: opacity 0.5s ease-in-out;
	}
</style>

<script client:load is:inline>
  import * as THREE from 'three';
  import { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js';
  import anime from 'animejs/lib/anime.es.js';

  const canvas = document.getElementById('three-canvas');
  const overlay = document.getElementById('overlay');

  const renderer = new THREE.WebGLRenderer({ canvas, alpha: true });
  renderer.setSize(window.innerWidth, window.innerHeight);

  const scene = new THREE.Scene();
  const camera = new THREE.PerspectiveCamera(45, window.innerWidth/window.innerHeight, 0.1, 1000);
  camera.position.set(0, 0, 5);

  const ambientLight = new THREE.AmbientLight(0xffffff, 1);
  scene.add(ambientLight);

  // Load the logo glb model from public folder at /logo-3d.glb
  const loader = new GLTFLoader();
  loader.load('/logo-3d.glb', gltf => {
    const model = gltf.scene;
    scene.add(model);

    // Animation loop rotating the model in the scene
    function animate() {
      requestAnimationFrame(animate);
      model.rotation.y += 0.005;
      renderer.render(scene, camera);
    }
    animate();

    // Fade in overlay after model loads 
    anime({
      targets: overlay,
      opacity: [0, 1],
      duration: 1000,
      easing: 'easeInOutQuad'
    });
  }, undefined, error => {
    console.error(error);
  });

  function triggerTransition() {
    window.removeEventListener('click', handleClick);
    window.removeEventListener('keydown', handleKeyDown);
    
    anime({
      targets: canvas,
      opacity: [1, 0],
      duration: 1500,
      easing: 'easeInOutQuad',
      complete: () => {
        console.log('Transition completed');
      }
    });
    anime({
      targets: overlay,
      opacity: [1, 0],
      duration: 1500,
      easing: 'easeInOutQuad'
    });
  }
  
  function handleClick() {
    triggerTransition();
  }
  
  function handleKeyDown(e) {
    if(e.code === 'Space'){
      triggerTransition();
    }
  }

  window.addEventListener('click', handleClick);
  window.addEventListener('keydown', handleKeyDown);
</script>
